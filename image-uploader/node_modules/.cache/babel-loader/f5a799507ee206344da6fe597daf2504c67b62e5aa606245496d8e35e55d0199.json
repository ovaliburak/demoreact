{"ast":null,"code":"var _jsxFileName = \"/home/bo/Documents/demo-app-react-api/frontend/image-uploader/src/DisplayImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayImage({\n  imageId\n}) {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/image/${imageId}`, {\n          responseType: 'blob'\n        });\n        setImageUrl(URL.createObjectURL(response.data));\n      } catch (error) {\n        console.error('Error fetching the image:', error);\n      }\n    };\n    if (imageId) {\n      fetchImage();\n    }\n  }, [imageId]);\n  return imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageUrl,\n    alt: \"Uploaded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 61\n  }, this);\n}\n_s(DisplayImage, \"KjMZRZCO4mLZUizaO9kQ3A3TUQU=\");\n_c = DisplayImage;\nexport default DisplayImage;\nvar _c;\n$RefreshReg$(_c, \"DisplayImage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DisplayImage","imageId","_s","imageUrl","setImageUrl","fetchImage","response","get","responseType","URL","createObjectURL","data","error","console","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/bo/Documents/demo-app-react-api/frontend/image-uploader/src/DisplayImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction DisplayImage({ imageId }) {\n  const [imageUrl, setImageUrl] = useState('');\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/image/${imageId}`, {\n          responseType: 'blob'\n        });\n        setImageUrl(URL.createObjectURL(response.data));\n      } catch (error) {\n        console.error('Error fetching the image:', error);\n      }\n    };\n\n    if (imageId) {\n      fetchImage();\n    }\n  }, [imageId]);\n\n  return imageUrl ? <img src={imageUrl} alt=\"Uploaded\" /> : <p>Loading...</p>;\n}\n\nexport default DisplayImage;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,+BAA8BN,OAAQ,EAAC,EAAE;UACzEO,YAAY,EAAE;QAChB,CAAC,CAAC;QACFJ,WAAW,CAACK,GAAG,CAACC,eAAe,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAED,IAAIX,OAAO,EAAE;MACXI,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,OAAOE,QAAQ,gBAAGJ,OAAA;IAAKe,GAAG,EAAEX,QAAS;IAACY,GAAG,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGpB,OAAA;IAAAqB,QAAA,EAAG;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC7E;AAACjB,EAAA,CArBQF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAuBrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}